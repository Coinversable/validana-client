{
  "version": 3,
  "file": "validana-client.umd.min.js",
  "sources": [
    "ng://validana-client/out/client.ts",
    "ng://validana-client/out/key.ts",
    "ng://validana-client/out/tools/crypto.ts",
    "ng://validana-client/out/tools/stringmap.ts",
    "ng://validana-client/out/tools/observable.ts",
    "ng://validana-client/out/tools/log.ts",
    "ng://validana-client/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "/**\r\n * @license\r\n * Copyright Coinversable B.V. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by a AGPLv3-style license that can be\r\n * found in the LICENSE file at https://validana.io/license\r\n */\r\n\r\n// tslint:disable-next-line:no-var-requires\r\nconst Buffer: typeof global.Buffer = require(\"buffer\").Buffer;\r\nimport { Log } from \"./tools/log\";\r\nimport { Crypto } from \"./tools/crypto\";\r\nimport { StringMap } from \"./tools/stringmap\";\r\nimport { VObserver } from \"./tools/observer\";\r\nimport { VObservable } from \"./tools/observable\";\r\nimport { PrivateKey } from \"./key\";\r\nimport { RequestMessage, ResponseOrPushMessage, ProcessRequest, Contract, TxResponseOrPush, TxRequest } from \"./api\";\r\n\r\n/**\r\n * Are we connected or not?\r\n * In case of NoDisconnected: reregister for push updates.\r\n * In case of NoCrashed: reregister for push updates. Also any outstanding requests were canceled. (called back with an error)\r\n * In case of NoNotSupported: it will not connect again. Also any outstanding requests were canceled. (called back with an error)\r\n */\r\nexport enum Connected { Yes, NoJustStarted, NoDisconnected, NoCrashed, NoNotSupported }\r\n\r\nexport interface PushMessage {\r\n\ttype: string;\r\n\tdata: any;\r\n}\r\n\r\n/**\r\n * The Client is used to interact with the Server.\r\n * Observe the Client to keep updated about the connection status and incomming push messages.\r\n */\r\nexport class Client extends VObservable<Connected | PushMessage> {\r\n\t//Singleton instance\r\n\tprotected static instance: Client | undefined = undefined;\r\n\r\n\t//Settings\r\n\tprotected serviceURL: string | undefined;\r\n\tprotected processURL: string | undefined;\r\n\tprotected signPrefix: Buffer | undefined;\r\n\tprotected signMethod: string = \"hash256-ecdsa-compact\";\r\n\tprotected reconnectTimeout: number = 5000;\r\n\tprotected maxReconnectTimeout: number = 60000;\r\n\tprotected isInitialized: boolean = false;\r\n\r\n\t//Websocket information\r\n\tprotected webSocket: WebSocket | undefined;\r\n\tprotected connected: Connected = Connected.NoJustStarted;\r\n\tprotected timeout: number = 5000;\r\n\tprotected requestResponseMap = new StringMap<{ type: string, data?: {}, resolve: (data: any) => void, reject: (error: Error) => void }>();\r\n\r\n\tprotected constructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\t/** Get this instance. */\r\n\tpublic static get(): Client {\r\n\t\tif (this.instance === undefined) {\r\n\t\t\tthis.instance = new Client();\r\n\t\t}\r\n\t\treturn this.instance;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize this instance. Once it is initialized it will connect to the server.\r\n\t * @param signPrefix The prefix used for signing transactions\r\n\t * @param serviceURL The url of the server for reading.\r\n\t * @param processURL The url of the server for new transactions.\r\n\t * @param signMethod The method used for signing transactions\r\n\t * @param reconnectTimeout The timeout before trying to reconnect should it disconnect.\r\n\t * Note that it is a bit randomized to prevent all client from connecting at the same time after a crash.\r\n\t * @param maxReconnectTimeout It will slowly increase timeout if connecting fails, this is the maximum it is allowed to reach.\r\n\t */\r\n\tpublic init(signPrefix: string, serviceURL: string, processURL: string = serviceURL, signMethod: string = \"hash256-ecdsa-compact\",\r\n\t\treconnectTimeout: number = 5000, maxReconnectTimeout: number = 60000): void {\r\n\r\n\t\tif (!this.isInitialized) {\r\n\t\t\tthis.isInitialized = true;\r\n\t\t\tthis.serviceURL = serviceURL;\r\n\t\t\tthis.processURL = processURL;\r\n\t\t\tif (!this.serviceURL.endsWith(\"/\")) {\r\n\t\t\t\tthis.serviceURL += \"/\";\r\n\t\t\t}\r\n\t\t\tif (!this.processURL.endsWith(\"/\")) {\r\n\t\t\t\tthis.processURL += \"/\";\r\n\t\t\t}\r\n\t\t\tif (this.processURL !== this.serviceURL && this.processURL!.slice(0, 4) !== \"http\") {\r\n\t\t\t\tthrow new Error(\"processURL should be the same as serviceURL or a http(s) url\");\r\n\t\t\t}\r\n\t\t\tthis.signPrefix = Crypto.utf8ToBinary(signPrefix);\r\n\t\t\tthis.signMethod = signMethod;\r\n\t\t\tthis.reconnectTimeout = reconnectTimeout;\r\n\t\t\tthis.maxReconnectTimeout = maxReconnectTimeout;\r\n\t\t\tthis.createWebsocket();\r\n\t\t}\r\n\t}\r\n\r\n\t/** Get whether there currently is a connection to the backend. 0 = yes, 1+ = no for various reasons. */\r\n\tpublic isConnected(): Connected {\r\n\t\treturn this.connected;\r\n\t}\r\n\r\n\t/** Helper to sign data with a private key for contract. */\r\n\tprotected sign(toSign: Buffer, privateKey: PrivateKey, method?: string): Buffer {\r\n\t\tlet result: Buffer;\r\n\t\t//Currently we only support one signing method.\r\n\t\tswitch (method) {\r\n\t\t\tcase \"hash256-ecdsa-compact\":\r\n\t\t\tdefault:\r\n\t\t\t\tresult = privateKey.sign(toSign);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/** Combines the query(\"contracts\"), signAndSend() and getProcessedTx() methods. */\r\n\tpublic async processTx(privateKey: PrivateKey, contractName: string, payload: object, validTill: number = 0): Promise<TxResponseOrPush> {\r\n\t\t//Will throw an error if it failed to retrieve the contracts. (Which we don't catch but directly forward.)\r\n\t\tconst contracts = await this.query(\"contracts\", undefined, true);\r\n\r\n\t\t//We managed to get the contracts\r\n\t\tfor (const contract of contracts) {\r\n\t\t\tif (contract.type === contractName) {\r\n\t\t\t\tif (Object.keys(contract.template).length !== Object.keys(payload).length) {\r\n\t\t\t\t\tthrow new Error(\"Payload not valid for contract.\");\r\n\t\t\t\t}\r\n\t\t\t\tfor (const key of Object.keys(contract.template)) {\r\n\t\t\t\t\tif ((payload as any)[key] === undefined) {\r\n\t\t\t\t\t\tthrow new Error(\"Payload not valid for contract.\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst id = Crypto.id();\r\n\t\t\t\ttry {\r\n\t\t\t\t\tawait this.signAndSend(privateKey, id, Crypto.hexToBinary(contract.hash), payload, validTill);\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn await this.getProcessedTx(id);\r\n\t\t\t\t\t} catch (error2) {\r\n\t\t\t\t\t\tthrow new Error(`Transaction delivered, but unable to determine status: ${error2.message}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tthrow new Error(`Failed to deliver transaction: ${error.message}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error(\"Contract does not exist (anymore).\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sign a transaction and send it to be processed.\r\n\t * @param privateKey The private key used for signing\r\n\t * @param transactionId Id of the transaction (use Crypto.id() to generate a random one)\r\n\t * @param contractHash Hash of the contract\r\n\t * @param payload A payload json\r\n\t * @param validTill Till when the transaction is valid (milliseconds since unix epoch), 0 = always\r\n\t * Once a block with a processed time greater than this is created it is no longer valid, but as creating\r\n\t * a block takes some time the block it is in may be processed just after the validTill.\r\n\t */\r\n\tpublic async signAndSend(privateKey: PrivateKey, transactionId: Buffer, contractHash: Buffer, payload: object, validTill: number = 0): Promise<void> {\r\n\t\tif (!this.isInitialized) {\r\n\t\t\tthrow new Error(\"Coinversable is not initialized.\");\r\n\t\t}\r\n\r\n\t\tconst binaryTx = Buffer.concat([\r\n\t\t\tCrypto.uInt8ToBinary(1), //version\r\n\t\t\ttransactionId,\r\n\t\t\tcontractHash,\r\n\t\t\tCrypto.uLongToBinary(validTill),\r\n\t\t\tCrypto.utf8ToBinary(JSON.stringify(payload))\r\n\t\t]);\r\n\t\tconst publicKey = privateKey.getPublicKey();\r\n\t\tconst signature = this.sign(Buffer.concat([this.signPrefix!, binaryTx]), privateKey, this.signMethod);\r\n\r\n\t\t//Create the format request\r\n\t\tconst request: ProcessRequest = {\r\n\t\t\tbase64tx: Crypto.binaryToBase64(Buffer.concat([\r\n\t\t\t\tCrypto.uInt32ToBinary(binaryTx.length + publicKey.length + signature.length),\r\n\t\t\t\tbinaryTx,\r\n\t\t\t\tsignature,\r\n\t\t\t\tpublicKey\r\n\t\t\t])),\r\n\t\t\tcreateTs: Date.now()\r\n\t\t};\r\n\t\treturn this.query(\"process\", request, true);\r\n\t}\r\n\r\n\t/** Get a transaction once it has been processed (which may take a while). */\r\n\tpublic async getProcessedTx(transactionId: Buffer): Promise<TxResponseOrPush> {\r\n\t\treturn new Promise<TxResponseOrPush>((resolve, reject) => new Helper(transactionId, resolve, reject));\r\n\t}\r\n\r\n\t/**\r\n\t * Send query to remote service.\r\n\t * @param type The action that you want to perform.\r\n\t * @param data The data to send to the server in this request\r\n\t * @param quickFail Whether to fail if there is no connection or to try again later\r\n\t */\r\n\tpublic async query(type: string, data?: any, quickFail?: boolean): Promise<void>;\r\n\tpublic async query(type: \"contracts\", data?: undefined, quickFail?: boolean): Promise<Contract[]>;\r\n\tpublic async query(type: \"transaction\", data: TxRequest, quickFail?: boolean): Promise<TxResponseOrPush | undefined>;\r\n\tpublic async query(type: \"txStatus\", data: TxRequest, quickFail?: boolean): Promise<string | undefined>;\r\n\tpublic async query(type: \"time\", data?: undefined, quickFail?: boolean): Promise<number>;\r\n\tpublic async query(type: \"process\", data: ProcessRequest, quickFail?: boolean): Promise<void>;\r\n\tpublic async query(type: string, data?: any, quickFail: boolean = false): Promise<any> {\r\n\t\t//If we only post a transaction we won't setup a websocket connection, but just send it.\r\n\t\tif (type === \"process\" && (this.processURL !== this.serviceURL || !this.isInitialized)) {\r\n\t\t\tif (!this.isInitialized) {\r\n\t\t\t\tthrow new Error(\"Coinversable not initialized\");\r\n\t\t\t} else {\r\n\t\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\t\tconst restRequest = new XMLHttpRequest();\r\n\t\t\t\t\trestRequest.onreadystatechange = () => {\r\n\t\t\t\t\t\tif (restRequest.readyState === 4) {\r\n\t\t\t\t\t\t\tif (restRequest.status === 200) {\r\n\t\t\t\t\t\t\t\tresolve(restRequest.responseText);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treject(restRequest.responseText !== \"\" ? restRequest.responseText : \"Failed to connect.\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t\trestRequest.open(\"POST\", this.processURL! + \"process\", true);\r\n\t\t\t\t\trestRequest.send(JSON.stringify(data));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst id: string = Crypto.binaryToHex(Crypto.id());\r\n\t\tconst request: RequestMessage = {\r\n\t\t\ttype,\r\n\t\t\tid\r\n\t\t};\r\n\r\n\t\t//If we have data to send along with our request\r\n\t\tif (data !== undefined) {\r\n\t\t\trequest.data = data;\r\n\t\t}\r\n\r\n\t\t//If it currently is not connected.\r\n\t\tif (this.webSocket === undefined || this.webSocket.readyState !== WebSocket.OPEN) {\r\n\t\t\tif (this.connected !== Connected.NoCrashed && this.connected !== Connected.NoNotSupported) {\r\n\t\t\t\tif (quickFail) {\r\n\t\t\t\t\tthrow new Error(\"No connection\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Mark it to be resend once it connects again\r\n\t\t\t\t\treturn new Promise((resolve, reject) => this.requestResponseMap.set(id, { type, data, resolve, reject }));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t//If there was a crash do not try again, could be our request was responsible for that.\r\n\t\t\t\tthrow new Error(\"Connection to backend crashed.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst requestString = JSON.stringify(request);\r\n\t\tLog.debug(`Request: ${requestString}`);\r\n\t\tthis.webSocket.send(requestString);\r\n\r\n\t\t//Await response\r\n\t\treturn new Promise((resolve, reject) => this.requestResponseMap.set(id, { type, data, resolve, reject }));\r\n\t}\r\n\r\n\t/** Create a new websocket after initializing or losing connection. */\r\n\tprotected createWebsocket(): void {\r\n\t\t//Create a websocket\r\n\t\tthis.webSocket = new WebSocket(this.serviceURL!);\r\n\r\n\t\t//When it opens.\r\n\t\tthis.webSocket.onopen = () => {\r\n\t\t\t//Mark as connected again before resending outstanding requests\r\n\t\t\tthis.connected = Connected.Yes;\r\n\r\n\t\t\t//Resend outstanding requests (in case of a crash they are removed already)\r\n\t\t\tfor (const key of this.requestResponseMap.keys()) {\r\n\t\t\t\tconst requestMap = this.requestResponseMap.get(key);\r\n\t\t\t\t//Resend the message\r\n\t\t\t\tthis.query(requestMap.type, requestMap.data).then(requestMap.resolve).catch(requestMap.reject);\r\n\t\t\t\t//No need to keep multiple, the newly created request will be saved again\r\n\t\t\t\tthis.requestResponseMap.delete(key);\r\n\t\t\t}\r\n\r\n\t\t\t//notify observers of new status\r\n\t\t\tthis.setChanged();\r\n\t\t\tthis.notifyObservers(Connected.Yes);\r\n\t\t\t//Successfully connected, so reset timeout. Random timeout, so we don't all reconnect at the same time.\r\n\t\t\tthis.timeout = this.reconnectTimeout * (0.5 + Math.random());\r\n\t\t};\r\n\r\n\t\t//this.webSocket.onerror = (error) => {\r\n\t\t//onclose will be called as well in the event of an error, so we let that deal with reconnecting\r\n\t\t//};\r\n\r\n\t\t//When a message is received.\r\n\t\tthis.webSocket.onmessage = (message) => {\r\n\t\t\tlet response: ResponseOrPushMessage;\r\n\t\t\ttry {\r\n\t\t\t\tresponse = JSON.parse(message.data);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tLog.warn(`Message data: ${message.data}`);\r\n\t\t\t\tLog.error(\"Received message is not valid json.\", error);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (response.id !== undefined) {\r\n\t\t\t\tLog.debug(`Response: ${message.data}`);\r\n\t\t\t\tconst responseMap = this.requestResponseMap.get(response.id);\r\n\t\t\t\tif (responseMap !== undefined) {\r\n\t\t\t\t\tif (response.error !== undefined) {\r\n\t\t\t\t\t\tresponseMap.reject(new Error(response.error));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresponseMap.resolve(response.data);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//Remove it from the list of outstanding requests\r\n\t\t\t\t\tthis.requestResponseMap.delete(response.id);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tLog.warn(`Received response to unknown request: ${message.data}`);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tLog.debug(`Push: ${message.data}`);\r\n\t\t\t\tif (response.error === undefined && typeof response.pushType === \"string\") {\r\n\t\t\t\t\tthis.setChanged();\r\n\t\t\t\t\tthis.notifyObservers({\r\n\t\t\t\t\t\ttype: response.pushType,\r\n\t\t\t\t\t\tdata: response.data\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tLog.warn(`Received invalid push message: ${message.data}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//When the websocket closes\r\n\t\tthis.webSocket.onclose = (ev) => {\r\n\t\t\tif (ev.code === 1001) {\r\n\t\t\t\tLog.info(\"Server going offline, reconnecting in a moment...\");\r\n\t\t\t\tthis.connected = Connected.NoDisconnected;\r\n\t\t\t\tthis.setChanged();\r\n\t\t\t} else if (ev.code === 4100) {\r\n\t\t\t\t//Any outstanding requests will be canceled\r\n\t\t\t\tfor (const requestKey of this.requestResponseMap.keys()) {\r\n\t\t\t\t\tthis.requestResponseMap.get(requestKey).reject(new Error(\"Version of api not supported.\"));\r\n\t\t\t\t\tthis.requestResponseMap.delete(requestKey);\r\n\t\t\t\t}\r\n\t\t\t\t//Version of the api not supported\r\n\t\t\t\tthis.connected = Connected.NoNotSupported;\r\n\t\t\t\tthis.setChanged();\r\n\t\t\t} else {\r\n\t\t\t\tif (this.connected === Connected.Yes) {\r\n\t\t\t\t\t//Log and delete outstanding requests\r\n\t\t\t\t\tfor (const requestKey of this.requestResponseMap.keys()) {\r\n\t\t\t\t\t\tconst data = this.requestResponseMap.get(requestKey).data;\r\n\t\t\t\t\t\tLog.warn(`Outstanding requests: ${requestKey}: type: ${this.requestResponseMap.get(requestKey).type} ` +\r\n\t\t\t\t\t\t\t`data: ${data !== undefined ? JSON.stringify(data) : undefined}`);\r\n\t\t\t\t\t\tthis.requestResponseMap.get(requestKey).reject(new Error(\"Connection to backend crashed.\"));\r\n\t\t\t\t\t\tthis.requestResponseMap.delete(requestKey);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tLog.error(\"Error in websocket connection, reconnecting in a moment...\");\r\n\t\t\t\t\tthis.connected = Connected.NoCrashed;\r\n\t\t\t\t\tthis.setChanged();\r\n\t\t\t\t} else if (this.connected === Connected.NoJustStarted) {\r\n\t\t\t\t\tLog.info(\"Failed to connect, trying again in a moment...\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tLog.info(\"Failed to reconnect, trying again in a moment...\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.notifyObservers(this.connected);\r\n\t\t\t//Unless the version of the api is no longer supported try to connect again.\r\n\t\t\tif (this.connected !== Connected.NoNotSupported) {\r\n\t\t\t\tsetTimeout(() => this.createWebsocket(), Math.min(this.timeout, this.maxReconnectTimeout));\r\n\t\t\t\tthis.timeout *= 1.5; //Increase timeout so we don't retry to often.\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/** Helper class to wait till a transaction has been processed before calling the callback. */\r\nclass Helper implements VObserver<Connected | PushMessage> {\r\n\tprivate readonly id: string;\r\n\tprivate readonly resolve: (tx: TxResponseOrPush) => void;\r\n\tprivate readonly reject: (error: Error) => void;\r\n\r\n\tconstructor(id: Buffer, resolve: (tx: TxResponseOrPush) => void, reject: (error: Error) => void) {\r\n\t\tthis.id = Crypto.binaryToHex(id);\r\n\t\tthis.resolve = resolve;\r\n\t\tthis.reject = reject;\r\n\t\tClient.get().addObserver(this);\r\n\t\tClient.get().query(\"transaction\", { txId: this.id, push: true }, true).then((data) => {\r\n\t\t\t//No known status, wait for push transaction instead\r\n\t\t\tif (data !== undefined) {\r\n\t\t\t\tClient.get().deleteObserver(this);\r\n\t\t\t\tthis.resolve(data);\r\n\t\t\t}\r\n\t\t}).catch((error) => {\r\n\t\t\tthis.reject(error);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic update(_: Client, arg?: Connected | PushMessage): void {\r\n\t\tif (typeof arg === \"object\" && arg.type === \"transaction\" && (arg.data as TxResponseOrPush).id === this.id) {\r\n\t\t\tClient.get().deleteObserver(this);\r\n\t\t\tthis.resolve(arg.data as TxResponseOrPush);\r\n\t\t} else if (arg === Connected.Yes) {\r\n\t\t\t//Reregister for push updates\r\n\t\t\tClient.get().query(\"transaction\", { txId: this.id, push: true }, true).then((data) => {\r\n\t\t\t\t//No known status, wait for push transaction instead\r\n\t\t\t\tif (data !== undefined) {\r\n\t\t\t\t\tClient.get().deleteObserver(this);\r\n\t\t\t\t\tthis.resolve(data);\r\n\t\t\t\t}\r\n\t\t\t}).catch((error) => {\r\n\t\t\t\tthis.reject(error);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}",
    "/**\r\n * @license\r\n * Copyright Coinversable B.V. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by a AGPLv3-style license that can be\r\n * found in the LICENSE file at https://validana.io/license\r\n */\r\n\r\n// tslint:disable-next-line:no-var-requires\r\nconst Buffer: typeof global.Buffer = require(\"buffer\").Buffer;\r\nimport { ECPair, networks, ECSignature } from \"bitcoinjs-lib\";\r\nimport { Crypto } from \"./tools/crypto\";\r\n\r\n/** A public key. We use and accept compressed keys only. */\r\nexport class PublicKey {\r\n\tprotected readonly key: ECPair;\r\n\tprivate address: string | undefined;\r\n\r\n\t/** Create a new public key from a buffer. Will throw an error if the buffer is not a valid public key. */\r\n\tconstructor(publicKey: Buffer | ECPair) {\r\n\t\tif (publicKey instanceof Buffer) {\r\n\t\t\tthis.key = ECPair.fromPublicKeyBuffer(publicKey, networks.bitcoin);\r\n\t\t} else if (publicKey instanceof ECPair) {\r\n\t\t\tthis.key = publicKey;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid type for public key\");\r\n\t\t}\r\n\t\tif (!this.key.compressed) {\r\n\t\t\tthrow new Error(\"Only compressed keys are supported.\");\r\n\t\t}\r\n\t}\r\n\r\n\t/** Check if a public key is valid or not. We accept only compressed public keys. */\r\n\tpublic getPublicKey(): Buffer {\r\n\t\treturn this.key.getPublicKeyBuffer();\r\n\t}\r\n\r\n\t/** Check if a public key is valid or not. We accept only compressed public keys. */\r\n\tpublic static isValidPublic(publicKey: Buffer): boolean {\r\n\t\ttry {\r\n\t\t\treturn ECPair.fromPublicKeyBuffer(publicKey, networks.bitcoin).compressed;\r\n\t\t} catch {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/** Check if an address is valid or not. Only prefix 0 is accepted. */\r\n\tpublic static isValidAddress(address: string): boolean {\r\n\t\tif (typeof address !== \"string\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst decodedAddress = Crypto.base58ToBinary(address);\r\n\t\t\tconst checksum = decodedAddress.slice(-4);\r\n\t\t\treturn decodedAddress[0] === 0x00 && Crypto.hash256(decodedAddress.slice(0, -4)).slice(0, 4).equals(checksum);\r\n\t\t} catch {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/** Get the address of this public key. We use the address of the compressed key with prefix 0. */\r\n\tpublic getAddress(): string {\r\n\t\tif (this.address === undefined) {\r\n\t\t\tthis.address = this.key.getAddress();\r\n\t\t}\r\n\t\treturn this.address;\r\n\t}\r\n\r\n\t/** Verify a message and its signature against a public key. Will throw an error if any of the input values is not valid. */\r\n\tpublic static verify(publicKey: Buffer, hash: Buffer, signature: Buffer): boolean {\r\n\t\treturn ECPair.fromPublicKeyBuffer(publicKey, networks.bitcoin).verify(\r\n\t\t\thash,\r\n\t\t\tECSignature.parseCompact(Buffer.concat([Crypto.uInt8ToBinary(27), signature])).signature\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/**\r\n * A private key.\r\n * Technical info: Only the secp256k1 curve is supported, We use compressed\r\n * wif prefix 0x80 (same as bitcoin) by default, but accept all others.\r\n */\r\nexport class PrivateKey extends PublicKey {\r\n\t//Compressed is only used if public key is not given\r\n\tprivate constructor(privateKey: ECPair) {\r\n\t\tsuper(privateKey);\r\n\t}\r\n\r\n\t/** Generate a new random private key. An error will be thrown if no suitable random source is available. */\r\n\tpublic static generate(): PrivateKey {\r\n\t\treturn new PrivateKey(ECPair.makeRandom({ compressed: true, network: networks.bitcoin }));\r\n\t}\r\n\r\n\t/** Check if a WIF is valid or not. Only compressed wifs with prefix 0x80 are accepted. */\r\n\tpublic static isValidWIF(wif: string): boolean {\r\n\t\ttry {\r\n\t\t\treturn ECPair.fromWIF(wif, networks.bitcoin).compressed;\r\n\t\t} catch (error) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get the wif of this private key.\r\n\t * By default it will use the same format it was imported in.\r\n\t * If it was generated by generate() this will be compressed with network prefix 0x80\r\n\t */\r\n\tpublic toWIF(): string {\r\n\t\treturn this.key.toWIF();\r\n\t}\r\n\r\n\t/** Turn a WIF into a private key. Throws an error if wif is not a valid private key. */\r\n\tpublic static fromWIF(wif: string): PrivateKey {\r\n\t\tconst privateKey = ECPair.fromWIF(wif, networks.bitcoin);\r\n\t\tif (!privateKey.compressed) {\r\n\t\t\tthrow new Error(\"Only compressed keys are supported.\");\r\n\t\t}\r\n\t\treturn new PrivateKey(privateKey);\r\n\t}\r\n\r\n\t/** Sign data with this private key. Returns the signature as 32 bytes r followed by 32 bytes s. */\r\n\tpublic sign(data: Buffer): Buffer {\r\n\t\treturn this.key.sign(Crypto.hash256(data)).toCompact(0, false).slice(1);\r\n\t}\r\n}",
    "/**\r\n * @license\r\n * Copyright Coinversable B.V. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by a AGPLv3-style license that can be\r\n * found in the LICENSE file at https://validana.io/license\r\n */\r\n\r\n// tslint:disable:no-var-requires\r\nconst md5Func = require(\"md5\");\r\nconst randomBytes = require(\"randombytes\");\r\nconst Buffer: typeof global.Buffer = require(\"buffer\").Buffer;\r\nimport { crypto as btccrypt } from \"bitcoinjs-lib\";\r\n\r\n/** Functions for hashing, and encoding binary data into other formats and back again. */\r\nexport class Crypto {\r\n\t//All base 58 characters in the order they are encoded in.\r\n\tprivate static readonly base58chars = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\r\n\t//And a map of characters to position in that string.\r\n\tprivate static readonly base58map: { [key: string]: number } = Object.keys(Crypto.base58chars).reduce(\r\n\t\t// @dynamic Make the angular compiler stop complaining\r\n\t\t(obj: any, key) => (obj[Crypto.base58chars[parseInt(key, 10)]] = parseInt(key, 10), obj), {});\r\n\r\n\t/** Calculate hash160 (ripemd160 of sha256) */\r\n\tpublic static hash160(buffer: Buffer): Buffer {\r\n\t\treturn btccrypt.hash160(buffer);\r\n\t}\r\n\r\n\t/** Calculate hash256 (double sha256) */\r\n\tpublic static hash256(buffer: Buffer): Buffer {\r\n\t\treturn btccrypt.hash256(buffer);\r\n\t}\r\n\r\n\t/** Calculate ripemd160 */\r\n\tpublic static ripemd160(buffer: Buffer): Buffer {\r\n\t\treturn btccrypt.ripemd160(buffer);\r\n\t}\r\n\r\n\t/** Calculate sha1 (Note that sha1 is unsafe nowadays!)  */\r\n\tpublic static sha1(buffer: Buffer): Buffer {\r\n\t\treturn btccrypt.sha1(buffer);\r\n\t}\r\n\r\n\t/** Calculate sha256 (Note that sha256 is vulnerable to length extension attacks, use hash256 instead.) */\r\n\tpublic static sha256(buffer: Buffer): Buffer {\r\n\t\treturn btccrypt.sha256(buffer);\r\n\t}\r\n\r\n\t/** Calculate md5 (Note that md5 is unsafe nowadays!)  */\r\n\tpublic static md5(buffer: Buffer): Buffer {\r\n\t\treturn Buffer.from(md5Func(buffer), \"hex\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if a string is valid hex code.\r\n\t * @param text The text to test.\r\n\t */\r\n\tpublic static isHex(text: string): boolean {\r\n\t\treturn text.search(/^[0-9A-Fa-f]*$/) === 0 && (text.length & 0x1) === 0;\r\n\t}\r\n\r\n\t/** Turn a hex encoded string into binary data. */\r\n\tpublic static hexToBinary(hex: string): Buffer {\r\n\t\treturn Buffer.from(hex, \"hex\");\r\n\t}\r\n\r\n\t/** Turn binary data into a hex encoded string. */\r\n\tpublic static binaryToHex(binary: Buffer): string {\r\n\t\treturn binary.toString(\"hex\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if a string is valid base58 code.\r\n\t * @param text The text to test.\r\n\t */\r\n\tpublic static isBase58(text: string): boolean {\r\n\t\treturn text.search(/^[1-9A-HJ-NP-Za-km-z]*$/) === 0;\r\n\t}\r\n\r\n\t/** Turn a base58 encoded string into binary data. */\r\n\tpublic static base58ToBinary(base58: string): Buffer {\r\n\t\tif (base58.length === 0) {\r\n\t\t\treturn Buffer.alloc(0);\r\n\t\t}\r\n\t\tconst bytes = [0];\r\n\t\tfor (const char of base58) {\r\n\t\t\tlet value = Crypto.base58map[char];\r\n\t\t\tif (value === undefined) {\r\n\t\t\t\tthrow new Error(\"Invalid character.\");\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j = 0; j < bytes.length; j++) {\r\n\t\t\t\tvalue += bytes[j] * 58;\r\n\t\t\t\tbytes[j] = value & 0xff;\r\n\t\t\t\tvalue >>= 8;\r\n\t\t\t}\r\n\r\n\t\t\twhile (value > 0) {\r\n\t\t\t\tbytes.push(value & 0xff);\r\n\t\t\t\tvalue >>= 8;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// deal with leading zeros\r\n\t\tfor (let k = 0; base58[k] === Crypto.base58chars[0] && k < base58.length - 1; k++) {\r\n\t\t\tbytes.push(0);\r\n\t\t}\r\n\r\n\t\treturn Buffer.from(bytes.reverse());\r\n\t}\r\n\r\n\t/** Turn binary data into a base58 encoded string. */\r\n\tpublic static binaryToBase58(binary: Buffer): string {\r\n\t\tif (binary.length === 0) {\r\n\t\t\treturn \"\";\r\n\t\t}\r\n\t\tlet result = \"\";\r\n\t\tconst digits = [0];\r\n\t\t// tslint:disable-next-line:prefer-for-of Old versions don't work well with buffer it seems.\r\n\t\tfor (let j = 0; j < binary.length; j++) {\r\n\t\t\tlet byte = binary[j];\r\n\t\t\tfor (let i = 0; i < digits.length; i++) {\r\n\t\t\t\tbyte += digits[i] << 8;\r\n\t\t\t\tdigits[i] = byte % 58;\r\n\t\t\t\tbyte = (byte / 58) | 0;\r\n\t\t\t}\r\n\r\n\t\t\twhile (byte > 0) {\r\n\t\t\t\tdigits.push(byte % 58);\r\n\t\t\t\tbyte = (byte / 58) | 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//Deal with leading zeros\r\n\t\tfor (let i = 0; binary[i] === 0 && i < binary.length - 1; i++) {\r\n\t\t\tresult += Crypto.base58chars[0];\r\n\t\t}\r\n\t\t//Turn digits into characters\r\n\t\tfor (let i = digits.length - 1; i >= 0; i--) {\r\n\t\t\tresult += Crypto.base58chars[digits[i]];\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if a string is valid base64 code.\r\n\t * @param text The text to test.\r\n\t */\r\n\tpublic static isBase64(text: string): boolean {\r\n\t\treturn text.search(/^[\\+\\/-9A-Za-z]*={0,2}$/) === 0 && (text.length & 0x3) === 0;\r\n\t}\r\n\r\n\t/** Turn a base64 encoded string into binary data. */\r\n\tpublic static base64ToBinary(base64: string): Buffer {\r\n\t\treturn Buffer.from(base64, \"base64\");\r\n\t}\r\n\r\n\t/** Turn binary data into a base64 encoded string. */\r\n\tpublic static binaryToBase64(binary: Buffer): string {\r\n\t\treturn binary.toString(\"base64\");\r\n\t}\r\n\r\n\t/**\r\n\t * Check if a string is valid utf8 as far as postgres is concerned.\r\n\t * @param text The text to test.\r\n\t */\r\n\tpublic static isUtf8Postgres(text: string): boolean {\r\n\t\treturn text.indexOf(\"\\0\") === -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Turn a text into for postgres valid utf8 text by removing invalid characters.\r\n\t * @param text The text to transform.\r\n\t */\r\n\tpublic static makeUtf8Postgres(text: string): string {\r\n\t\treturn text.replace(\"\\0\", \"\");\r\n\t}\r\n\r\n\t/** Turn an utf8 string into binary data. */\r\n\tpublic static utf8ToBinary(text: string): Buffer {\r\n\t\treturn Buffer.from(text, \"utf8\");\r\n\t}\r\n\r\n\t/** Turn binary data into an utf8 string. */\r\n\tpublic static binaryToUtf8(binary: Buffer): string {\r\n\t\treturn binary.toString(\"utf8\");\r\n\t}\r\n\r\n\t/**  Turn a javascript number into binary data (Only valid for numbers 0-255, will throw an error otherwise). */\r\n\tpublic static uInt8ToBinary(unsignedInt: number): Buffer {\r\n\t\tconst buffer = Buffer.alloc(1);\r\n\t\tbuffer.writeUInt8(unsignedInt, 0);\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\t/** Turn 1 byte of binary data into a javascript number. Will throw an error if it cannot be converted. */\r\n\tpublic static binaryToUInt8(buffer: Buffer): number {\r\n\t\treturn buffer.readUInt8(0);\r\n\t}\r\n\r\n\t/** Turn a javascript number into binary data (Only valid for numbers 0-(2^16-1), will throw an error otherwise). */\r\n\tpublic static uInt16ToBinary(unsignedInt: number): Buffer {\r\n\t\tconst buffer = Buffer.alloc(2);\r\n\t\tbuffer.writeUInt16LE(unsignedInt, 0);\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\t/** Turn 2 bytes of binary data into a javascript number. Will throw an error if it cannot be converted. */\r\n\tpublic static binaryToUInt16(buffer: Buffer): number {\r\n\t\treturn buffer.readUInt16LE(0);\r\n\t}\r\n\r\n\t/** Turn a javascript number into binary data (Only valid for numbers 0-(2^32-1), will throw an error otherwise). */\r\n\tpublic static uInt32ToBinary(unsignedInt: number): Buffer {\r\n\t\tconst buffer = Buffer.alloc(4);\r\n\t\tbuffer.writeUInt32LE(unsignedInt, 0);\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\t/** Turn 4 bytes of binary data into a javascript number. Will throw an error if it cannot be converted. */\r\n\tpublic static binaryToUInt32(buffer: Buffer): number {\r\n\t\treturn buffer.readUInt32LE(0);\r\n\t}\r\n\r\n\t/** Turn a javascript number into binary data (Only valid for numbers 0-(2^53-1), will throw an error otherwise). */\r\n\tpublic static uLongToBinary(ulong: number): Buffer {\r\n\t\t//A normal long is 64 bits, not 53, but javascript only allows 53 bits accuracy.\r\n\t\tif (!Number.isSafeInteger(ulong) || ulong < 0) {\r\n\t\t\tthrow new Error(\"Invalid number.\");\r\n\t\t}\r\n\t\tconst buffer = Buffer.allocUnsafe(8);\r\n\t\tbuffer.writeUInt32LE(ulong % 4294967296, 0);\r\n\t\tbuffer.writeUInt32LE(ulong / 4294967296, 4);\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\t/** Turn binary data into a javascript number. Will throw an error if it cannot be converted. */\r\n\tpublic static binaryToULong(binary: Buffer): number {\r\n\t\tconst result = binary.readUInt32LE(0) + binary.readUInt32LE(4) * 4294967296;\r\n\t\tif (!Number.isSafeInteger(result)) {\r\n\t\t\tthrow new Error(\"Invalid binary data.\");\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/** Generate a random 16 bytes of data. */\r\n\tpublic static id(): Buffer {\r\n\t\ttry {\r\n\t\t\t//It will throw an error if no good random source can be found.\r\n\t\t\treturn randomBytes(16);\r\n\t\t} catch {\r\n\t\t\t//Use a less random source, which is good enough as security doesn't depend on it.\r\n\t\t\t//We use use a better random to ensure there are no collisions.\r\n\t\t\tlet result: string = \"\";\r\n\t\t\tfor (let i = 0; i < 4; i++) {\r\n\t\t\t\tresult += (Math.random() * 16).toString(16).slice(2, 10);\r\n\t\t\t}\r\n\t\t\treturn Crypto.hexToBinary(result);\r\n\t\t}\r\n\t}\r\n}",
    "/**\r\n * @license\r\n * Copyright Coinversable B.V. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by a AGPLv3-style license that can be\r\n * found in the LICENSE file at https://validana.io/license\r\n */\r\n\r\n/**\r\n * This class saves key-value pairs.\r\n * Similar to the ES6 Map, but compatile with older browsers.\r\n */\r\nexport class StringMap<T> {\r\n\tprivate map: { [key: string]: T } = {};\r\n\r\n\t/**\r\n\t * Add all elements from an object, overwriting current values if @param overwrite is true (default).\r\n\t * @param object The array of key-value pairs to add from.\r\n\t * @param overwrite Should intersecting elements be overwritten or not.\r\n\t */\r\n\tpublic setFromObject(this: StringMap<T>, object: Readonly<{ [key: string]: T }>, overwrite: boolean = true): StringMap<T> {\r\n\t\tfor (const key of Object.keys(object)) {\r\n\t\t\tif (overwrite || !this.has(key)) {\r\n\t\t\t\tthis.map[key] = object[key];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Add all elements from another map, overwriting current values if @param overwrite is true (default).\r\n\t * @param map The map to add from.\r\n\t * @param overwrite Should intersecting elements be overwritten or not.\r\n\t */\r\n\tpublic setFromMap(this: StringMap<T>, map: Readonly<StringMap<T>>, overwrite: boolean = true): StringMap<T> {\r\n\t\tfor (const key of map.keys()) {\r\n\t\t\tif (overwrite || !this.has(key)) {\r\n\t\t\t\tthis.map[key] = map.get(key);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Get the value associated with a certain key (or undefined if it does not exist).\r\n\t * @param key the key\r\n\t */\r\n\tpublic get(key: string): T { //https://github.com/Microsoft/TypeScript/issues/9619 Add undefined if there is a solution\r\n\t\treturn this.map[key];\r\n\t}\r\n\r\n\t/**\r\n\t * Set the value associated with a certain key.\r\n\t * @param key the key\r\n\t * @param value the value\r\n\t */\r\n\tpublic set(this: StringMap<T>, key: string, value: T): StringMap<T> {\r\n\t\tthis.map[key] = value;\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if the Map contains a certain key-value pair.\r\n\t * @param key the key of the key-value pair\r\n\t */\r\n\tpublic has(key: string): boolean {\r\n\t\treturn this.map.hasOwnProperty(key);\r\n\t}\r\n\r\n\t/**\r\n\t * Delete a key-value pair.\r\n\t * @param key the key\r\n\t */\r\n\tpublic delete(this: StringMap<T>, key: string): StringMap<T> {\r\n\t\tdelete this.map[key];\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Get a list of all keys in this Map. */\r\n\tpublic keys(): string[] {\r\n\t\treturn Object.keys(this.map);\r\n\t}\r\n\r\n\t/** Get a list of all values in this Map. */\r\n\tpublic values(): T[] {\r\n\t\tconst result: T[] = [];\r\n\t\tfor (const key of Object.keys(this.map)) {\r\n\t\t\tresult.push(this.map[key]);\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\t/** Get the total amount of key-value pairs in this Map. */\r\n\tpublic size(): number {\r\n\t\treturn Object.keys(this.map).length;\r\n\t}\r\n\r\n\t/** Remove all values from this Map. */\r\n\tpublic clear(this: StringMap<T>): StringMap<T> {\r\n\t\tfor (const key of Object.keys(this.map)) {\r\n\t\t\tdelete this.map[key];\r\n\t\t}\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/** Get a list of all key-value pairs in this Map. */\r\n\tpublic entries(): { [key: string]: T } {\r\n\t\treturn { ...this.map };\r\n\t}\r\n}",
    "/**\r\n * @license\r\n * Copyright Coinversable B.V. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by a AGPLv3-style license that can be\r\n * found in the LICENSE file at https://validana.io/license\r\n */\r\n\r\nimport { VObserver } from \"./observer\";\r\n\r\n/**\r\n * Classical Observable class\r\n * Generics are used to make it clear what data can be forwarded to observers.\r\n */\r\nexport class VObservable<T> {\r\n\r\n\t// The observers this observable should notify\r\n\tprivate observers: Array<VObserver<T>> = new Array<VObserver<T>>();\r\n\r\n\t// If this object has changed\r\n\tprivate changed: boolean = false;\r\n\r\n\t/**\r\n\t * Add observer to the list of observers\r\n\t * @param o The observer to add\r\n\t */\r\n\tpublic addObserver(o: VObserver<T>): void {\r\n\t\tif (this.observers.indexOf(o) === -1) {\r\n\t\t\tthis.observers.push(o);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this has a certain observer.\r\n\t * @param o the observer to check\r\n\t */\r\n\tpublic hasObserver(o: VObserver<T>): boolean {\r\n\t\treturn this.observers.indexOf(o) !== -1;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates that the object is no longer changed\r\n\t */\r\n\tprotected clearChanged(): void {\r\n\t\tthis.changed = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return the number of active observers\r\n\t */\r\n\tpublic countObservers(): number {\r\n\t\treturn this.observers.length;\r\n\t}\r\n\r\n\t/**\r\n\t * Delete given observer\r\n\t * @param o The observer to delete\r\n\t */\r\n\tpublic deleteObserver(o: VObserver<T>): void {\r\n\t\tconst index = this.observers.indexOf(o);\r\n\t\tif (index > -1) {\r\n\t\t\tthis.observers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * See if this element has changed\r\n\t */\r\n\tpublic hasChanged(): boolean {\r\n\t\treturn this.changed;\r\n\t}\r\n\r\n\t/**\r\n\t * Notify all listening observers when something has changed\r\n\t * @param arg (optional) additional argument to pass on\r\n\t */\r\n\tpublic notifyObservers(arg?: T): void {\r\n\r\n\t\t// Make sure there are changes to notify\r\n\t\tif (this.hasChanged()) {\r\n\r\n\t\t\t// Call all observers\r\n\t\t\tfor (const observer of this.observers) {\r\n\t\t\t\tobserver.update(this, arg);\r\n\t\t\t}\r\n\r\n\t\t\t// Clear changed\r\n\t\t\tthis.clearChanged();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Object contents have changed\r\n\t * It is now possible to notify observers\r\n\t */\r\n\tprotected setChanged(): void {\r\n\t\tthis.changed = true;\r\n\t}\r\n}",
    "/**\r\n * @license\r\n * Copyright Coinversable B.V. All Rights Reserved.\r\n *\r\n * Use of this source code is governed by a AGPLv3-style license that can be\r\n * found in the LICENSE file at https://validana.io/license\r\n */\r\n\r\nimport * as Raven from \"raven-js\";\r\n\r\n// tslint:disable:no-console\r\nexport class Log {\r\n\tprivate static reportErrors: boolean = false;\r\n\tpublic static readonly Debug = 0;\r\n\tpublic static readonly Info = 1;\r\n\tpublic static readonly Warning = 2;\r\n\tpublic static readonly Error = 3;\r\n\tpublic static readonly Fatal = 4;\r\n\tpublic static readonly None = 5;\r\n\tpublic static Level = Log.Error;\r\n\tpublic static options: Raven.RavenOptions = { tags: { clientVersion: \"1.0.0\" }, extra: {} };\r\n\r\n\t/** Set this logger to report errors. Will throw an error if there are problems with the url. */\r\n\tpublic static setReportErrors(dns: string, ignoreLocalhost: boolean): void {\r\n\t\tLog.reportErrors = true;\r\n\t\tRaven.config(dns, { autoBreadcrumbs: false, ignoreUrls: ignoreLocalhost ? [/localhost/] : [] }).install();\r\n\t}\r\n\r\n\t/**  Is this logger registerd to report errors. */\r\n\tpublic static isReportingErrors(): boolean {\r\n\t\treturn Log.reportErrors;\r\n\t}\r\n\r\n\t/**\r\n\t * Set the user that is logged in.\r\n\t * @param addr the address of the user\r\n\t */\r\n\tpublic static setUser(addr: string): void {\r\n\t\tRaven.setUserContext({ id: addr });\r\n\t}\r\n\r\n\t/**\r\n\t * Set the release version of the dashboard.\r\n\t * @param version the version\r\n\t */\r\n\tpublic static setRelease(version: string): void {\r\n\t\tRaven.setRelease(version);\r\n\t}\r\n\r\n\t/**\r\n\t * Detailed information about the program flow that is used for debugging problems.\r\n\t * Will never be logged in a live environment.\r\n\t * @param msg Description of the issue\r\n\t * @param error An optional error that may have arisen\r\n\t */\r\n\tpublic static debug(msg: string, error?: Error): void {\r\n\t\tif (Log.Level <= Log.Debug) {\r\n\t\t\t//Old version of nodejs don't have the console.debug function\r\n\t\t\tif (console.debug !== undefined) {\r\n\t\t\t\tconsole.debug(msg + (error !== undefined ? `: ${error.stack}` : \"\"));\r\n\t\t\t} else {\r\n\t\t\t\tconsole.info(msg + (error !== undefined ? `: ${error.stack}` : \"\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Significant things that occur in normal circumstances.\r\n\t * @param msg Description of the issue\r\n\t * @param error An optional error that may have arisen\r\n\t */\r\n\tpublic static info(msg: string, error?: Error): void {\r\n\t\tif (Log.Level <= Log.Info) {\r\n\t\t\tconsole.info(msg + (error !== undefined ? `: ${error.stack}` : \"\"));\r\n\t\t\tif (Log.reportErrors) {\r\n\t\t\t\tif (error !== undefined) {\r\n\t\t\t\t\tRaven.captureBreadcrumb({ level: \"info\", message: msg, data: { stack: error.stack } });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tRaven.captureBreadcrumb({ level: \"info\", message: msg });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Problems which may occur in abnormal circumstances (loss of connection, etc), but are dealt with by the program.\r\n\t * @param msg Description of the issue\r\n\t * @param error An optional error that may have arisen\r\n\t */\r\n\tpublic static warn(msg: string, error?: Error): void {\r\n\t\tif (Log.Level <= Log.Warning) {\r\n\t\t\tconsole.warn(msg + (error !== undefined ? `: ${error.stack}` : \"\"));\r\n\t\t\tif (Log.reportErrors) {\r\n\t\t\t\tif (error !== undefined) {\r\n\t\t\t\t\tRaven.captureBreadcrumb({ level: \"warning\", message: msg, data: { stack: error.stack } });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tRaven.captureBreadcrumb({ level: \"warning\", message: msg });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Errors which require you to modify the program code, because they should never happen.\r\n\t * You will always be notified if this occurs.\r\n\t * @param msg Description of the issue\r\n\t * @param error An optional error that may have arisen\r\n\t */\r\n\tpublic static error(msg: string, error?: Error): void {\r\n\t\tif (Log.Level <= Log.Error) {\r\n\t\t\tconsole.error(msg + (error !== undefined ? `: ${error.stack}` : \"\"));\r\n\t\t\tif (Log.reportErrors) {\r\n\t\t\t\tif (error !== undefined) {\r\n\t\t\t\t\tRaven.captureException(error, { level: \"error\", extra: { message: msg } });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tRaven.captureMessage(msg, { level: \"error\" });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * The kind of errors for which you should be waken up at night. Like a live backend going down.\r\n\t * You will always be immediately notified if this occurs.\r\n\t * @param msg Description of the issue\r\n\t * @param error An optional error that may have arisen\r\n\t */\r\n\tpublic static fatal(msg: string, error?: Error): void {\r\n\t\tif (Log.Level <= Log.Fatal) {\r\n\t\t\tconsole.error(msg + (error !== undefined ? `: ${error.stack}` : \"\"));\r\n\t\t\tif (Log.reportErrors) {\r\n\t\t\t\tif (error !== undefined) {\r\n\t\t\t\t\t//Typecast because of buggy raven js types\r\n\t\t\t\t\tRaven.captureException(error, { level: \"fatal\" as \"critical\", extra: { message: msg } });\r\n\t\t\t\t} else {\r\n\t\t\t\t\tRaven.captureMessage(msg, { level: \"fatal\" as \"critical\" });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"
  ],
  "names": [
    "Client",
    "_super",
    "_this",
    "call",
    "this",
    "signMethod",
    "reconnectTimeout",
    "maxReconnectTimeout",
    "isInitialized",
    "connected",
    "Connected",
    "NoJustStarted",
    "timeout",
    "requestResponseMap",
    "StringMap",
    "tslib_1.__extends",
    "get",
    "instance",
    "undefined",
    "prototype",
    "init",
    "signPrefix",
    "serviceURL",
    "processURL",
    "endsWith",
    "slice",
    "Error",
    "Crypto",
    "utf8ToBinary",
    "createWebsocket",
    "isConnected",
    "sign",
    "toSign",
    "privateKey",
    "method",
    "result",
    "processTx",
    "contractName",
    "payload",
    "validTill",
    "query",
    "contracts",
    "_f",
    "sent",
    "contracts_1",
    "tslib_1.__values",
    "contracts_1_1",
    "next",
    "contract",
    "value",
    "type",
    "Object",
    "keys",
    "template",
    "length",
    "_d",
    "_e",
    "done",
    "key",
    "id",
    "signAndSend",
    "hexToBinary",
    "hash",
    "getProcessedTx",
    "error2_1",
    "message",
    "error_1",
    "transactionId",
    "contractHash",
    "binaryTx",
    "Buffer",
    "concat",
    "uInt8ToBinary",
    "uLongToBinary",
    "JSON",
    "stringify",
    "publicKey",
    "getPublicKey",
    "signature",
    "request",
    "base64tx",
    "binaryToBase64",
    "uInt32ToBinary",
    "createTs",
    "Date",
    "now",
    "Promise",
    "resolve",
    "reject",
    "Helper",
    "data",
    "quickFail",
    "restRequest",
    "XMLHttpRequest",
    "onreadystatechange",
    "readyState",
    "status",
    "responseText",
    "open",
    "send",
    "binaryToHex",
    "webSocket",
    "WebSocket",
    "OPEN",
    "NoCrashed",
    "NoNotSupported",
    "set",
    "requestString",
    "Log",
    "debug",
    "onopen",
    "Yes",
    "_c",
    "requestMap",
    "then",
    "catch",
    "delete",
    "setChanged",
    "notifyObservers",
    "Math",
    "random",
    "onmessage",
    "response",
    "parse",
    "error",
    "warn",
    "responseMap",
    "pushType",
    "onclose",
    "ev",
    "code",
    "info",
    "NoDisconnected",
    "requestKey",
    "_g",
    "setTimeout",
    "min",
    "VObservable",
    "addObserver",
    "txId",
    "push",
    "deleteObserver",
    "update",
    "_",
    "arg",
    "require",
    "PublicKey",
    "ECPair",
    "fromPublicKeyBuffer",
    "networks",
    "bitcoin",
    "compressed",
    "getPublicKeyBuffer",
    "isValidPublic",
    "_a",
    "isValidAddress",
    "address",
    "decodedAddress",
    "base58ToBinary",
    "checksum",
    "hash256",
    "equals",
    "getAddress",
    "verify",
    "ECSignature",
    "parseCompact",
    "PrivateKey",
    "generate",
    "makeRandom",
    "network",
    "isValidWIF",
    "wif",
    "fromWIF",
    "toWIF",
    "toCompact",
    "md5Func",
    "randomBytes",
    "hash160",
    "buffer",
    "btccrypt",
    "ripemd160",
    "sha1",
    "sha256",
    "md5",
    "from",
    "isHex",
    "text",
    "search",
    "hex",
    "binary",
    "toString",
    "isBase58",
    "base58",
    "alloc",
    "bytes",
    "base58_1",
    "base58_1_1",
    "char",
    "base58map",
    "j",
    "k",
    "base58chars",
    "reverse",
    "binaryToBase58",
    "digits",
    "byte",
    "i",
    "isBase64",
    "base64ToBinary",
    "base64",
    "isUtf8Postgres",
    "indexOf",
    "makeUtf8Postgres",
    "replace",
    "binaryToUtf8",
    "unsignedInt",
    "writeUInt8",
    "binaryToUInt8",
    "readUInt8",
    "uInt16ToBinary",
    "writeUInt16LE",
    "binaryToUInt16",
    "readUInt16LE",
    "writeUInt32LE",
    "binaryToUInt32",
    "readUInt32LE",
    "ulong",
    "Number",
    "isSafeInteger",
    "allocUnsafe",
    "binaryToULong",
    "reduce",
    "obj",
    "parseInt",
    "map",
    "setFromObject",
    "object",
    "overwrite",
    "has",
    "setFromMap",
    "hasOwnProperty",
    "values",
    "size",
    "clear",
    "entries",
    "assign",
    "observers",
    "Array",
    "changed",
    "o",
    "hasObserver",
    "clearChanged",
    "countObservers",
    "index",
    "splice",
    "hasChanged",
    "setReportErrors",
    "dns",
    "ignoreLocalhost",
    "reportErrors",
    "Raven.config",
    "autoBreadcrumbs",
    "ignoreUrls",
    "install",
    "isReportingErrors",
    "setUser",
    "addr",
    "Raven.setUserContext",
    "setRelease",
    "version",
    "Raven.setRelease",
    "msg",
    "Level",
    "Debug",
    "console",
    "stack",
    "Info",
    "Raven.captureBreadcrumb",
    "level",
    "Warning",
    "Raven.captureException",
    "extra",
    "Raven.captureMessage",
    "fatal",
    "Fatal",
    "None",
    "options",
    "tags",
    "clientVersion",
    "extendStatics",
    "setPrototypeOf",
    "__proto__",
    "d",
    "b",
    "p",
    "__extends",
    "__",
    "constructor",
    "create",
    "__awaiter",
    "thisArg",
    "_arguments",
    "P",
    "generator",
    "fulfilled",
    "step",
    "e",
    "rejected",
    "apply",
    "__generator",
    "body",
    "f",
    "y",
    "t",
    "g",
    "label",
    "trys",
    "ops",
    "verb",
    "throw",
    "return",
    "Symbol",
    "iterator",
    "n",
    "v",
    "op",
    "TypeError",
    "pop",
    "__values",
    "m"
  ],
  "mappings": "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"
}
